// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



model User {
  userId   Int     @id @default(autoincrement()) @map("userId")
  email String  @unique @map("email")
  password       String     @map("password")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  userInfo UserInfo?
  resume Resume?

  @@map("User")
}
model UserInfo {
  userInfoId   Int     @id @default(autoincrement()) @map("userInfoId")
  userId   Int  @unique   @map("userId")
  name String  @unique @map("name")
  role       String   @default("APPLICANT")  @map("role")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  user     User    @relation(fields: [userId], references: [userId], onDelete: Cascade)
  @@map("UserInfo")
}
model Resume {
  resumeId   Int     @id @default(autoincrement()) @map("resumeId")
  userId   Int   @unique  @map("userId")
  status String  @default("APPLY") @map("status")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  user     User    @relation(fields: [userId], references: [userId], onDelete: Cascade)
  resumeInfo ResumeInfo?
  @@map("Resume")
}
model ResumeInfo {
  ResumeInfoId   Int     @id @default(autoincrement()) @map("ResumeInfoId")
  resumeId   Int    @unique @map("resumeId")
  title       String     @map("title")
  introduce       String     @map("introduce")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  resume     Resume    @relation(fields: [resumeId], references: [resumeId], onDelete: Cascade)
  @@map("ResumeInfo")
}